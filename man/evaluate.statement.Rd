% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate.statement.R
\name{evaluate.statement}
\alias{evaluate.statement}
\title{Define Stan model}
\usage{
evaluate.statement(statement, ikde.model, eval.point)
}
\arguments{
\item{statement}{A string containing a sampling statement}

\item{ikde.model}{An object of class ikde.model, which has been built}

\item{eval.point}{A list of parameter names and the point to evaluate the statement}
}
\value{
A real number indicating value of the log-density of the statement at the evaluation point
}
\description{
Defines Stan model, creates model code, and stores input data
}
\details{
Parses the given sampling statement and evaluates it at the specified
evaluation point.
}
\examples{
data(lm.generated)

X <- lm.generated$X
y <- lm.generated$y

data <- list(N = list("int<lower=1>", nrow(X)),
             k = list("int<lower=1>", ncol(X)),
             X = list("matrix[N, k]", X),
             y = list("vector[N]", y))
parameters <- list(beta = "vector[k]",
                   sigma = "real<lower=0>")
model <- list(priors = c("beta ~ normal(0, 10)",
                         "sigma ~ inv_gamma(1, 1)"),
              likelihood = c("y ~ normal(X * beta, sigma)"))

ikde.model <- define.model(data, parameters, model)
ikde.model <- build.model(ikde.model)

statement <- ikde.model$model$priors[1]
eval.point <- list(beta = c(0, 1, 2, 3), sigma = 1)

print(apply(stan.extract$beta, 2, mean))
  
}
